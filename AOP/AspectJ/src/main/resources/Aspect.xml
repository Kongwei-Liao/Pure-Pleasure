<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           https://www.springframework.org/schema/aop/spring-aop.xsd">

    <aop:aspectj-autoproxy/>

    <!-- Aspect -->
    <bean id="logAspect" class="com.example.aop.aspectj.LoggingAspect"/>

    <aop:config>

        <aop:aspect id="aspectLogging" ref="logAspect">

            <!-- @Before -->
            <aop:pointcut id="pointCutBefore"
                          expression="execution(* com.example.aop.aspectj.CustomerBo.addCustomer(..))"/>

            <aop:before method="logBefore" pointcut-ref="pointCutBefore"/>

            <!-- 一个<aop:aspect>标签内部仅有一个pointcut -->
            <!-- @After -->
            <!--            <aop:pointcut id="pointCutAfter" expression="execution(* com.example.aop.aspectj.CustomerBo.addCustomer(..))" />-->
            <!--&lt;!&ndash;            <aop:pointcut id="pointCutAfter" expression="execution(* com.example.aop.aspectj.CustomerBo.addCustomerReturnValue(..))" />&ndash;&gt;-->

            <!--            <aop:after method="logAfter" pointcut-ref="pointCutAfter" />-->

        </aop:aspect>

        <aop:aspect id="aspectLogging" ref="logAspect">

            <!-- @After -->
            <aop:pointcut id="pointCutAfter"
                          expression="execution(* com.example.aop.aspectj.CustomerBo.addCustomerReturnValue(..))"/>

            <aop:after method="logAfter" pointcut-ref="pointCutAfter"/>
        </aop:aspect>

        <aop:aspect id="aspectLogging" ref="logAspect">

            <!-- @AfterReturning -->
            <aop:pointcut id="pointCutAfterReturning"
                          expression="execution(* com.example.aop.aspectj.CustomerBo.addCustomerReturnValue(..))"/>

            <aop:after-returning method="logAfterReturning" returning="result"
                                 pointcut-ref="pointCutAfterReturning"/>

        </aop:aspect>

        <aop:aspect id="aspectLogging" ref="logAspect">

            <!-- @AfterThrowing -->
            <aop:pointcut id="pointCutAfterThrowing"
                          expression="execution(* com.example.aop.aspectj.CustomerBo.addCustomerThrowException(..))"/>

            <aop:after-throwing method="logAfterThrowing" throwing="error"
                                pointcut-ref="pointCutAfterThrowing"/>

        </aop:aspect>

        <aop:aspect id="aspectLogging" ref="logAspect">

            <!-- @Around -->
            <aop:pointcut id="pointCutAround"
                          expression="execution(* com.example.aop.aspectj.CustomerBo.addCustomerAround(..))"/>

            <aop:around method="logAround" pointcut-ref="pointCutAround"/>

        </aop:aspect>
    </aop:config>
</beans>